import java.util.*;
class Solution {
    public static int longestSubarray(int[] arr, int k) {
        Map<Long,Integer> map = new HashMap<>();
        map.put(0l,0);
        int n=arr.length;
        long pSum=0;
        int length=0;
        int count=0;
        for(int i=0;i<n;i++){
            pSum+=arr[i];
            if(!map.containsKey(pSum))  map.put(pSum,i+1);
           
            if(map.containsKey(pSum-k)){
                if( i+1-map.get(pSum-k) > length){
                    length=i+1-map.get(pSum-k);
                    count=0;
                }
                if( i+1-map.get(pSum-k) == length){
                    
                    count++;
                }
            }
        }
        return count;
    }
}

public class MyClass{
    public static void main(String args[]){
        int arr[]={2,3,5,2,-1,-1,3};
        int k=8;
        System.out.println(Solution.longestSubarray(arr,k));
    }
}
